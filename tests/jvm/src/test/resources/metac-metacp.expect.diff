=========
advanced.
=========
--- metac
+++ metacp
 kind: PACKAGE
 properties: 0
 name: "advanced"
-accessibility {
-  tag: PUBLIC
-  symbol: ""
-}
 language: SCALA


==========================
advanced.Existential#e1().
==========================
--- metac
+++ metacp
             type_arguments {
               tag: TYPE_REF
               typeRef {
-                symbol: "local3"
+                symbol: "advanced.Existential#e1()._$1#"
         declarations {
-          symbol: "local3"
+          symbol: "advanced.Existential#e1()._$1#"
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


==========================
advanced.Existential#e2().
==========================
--- metac
+++ metacp
                 type_arguments {
                   tag: TYPE_REF
                   typeRef {
-                    symbol: "local4"
+                    symbol: "advanced.Existential#e2().T#"
             declarations {
-              symbol: "local4"
+              symbol: "advanced.Existential#e2().T#"
               kind: UNKNOWN_KIND
               properties: 0
               name: ""


=========================
advanced.Structural#s1().
=========================
--- metac
+++ metacp
         declarations {
-          symbol: "local0"
+          symbol: "advanced.Structural#$anon#x()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


=========================
advanced.Structural#s2().
=========================
--- metac
+++ metacp
         declarations {
-          symbol: "local1"
+          symbol: "advanced.Structural#s2().$anon#x()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


===================
advanced.Test.e2().
===================
--- metac
+++ metacp
                 type_arguments {
                   tag: TYPE_REF
                   typeRef {
-                    symbol: "local4"
+                    symbol: "advanced.Test.T#"
             declarations {
-              symbol: "local4"
+              symbol: "advanced.Test.T#"
               kind: UNKNOWN_KIND
               properties: 0
               name: ""


===================
advanced.Test.s1().
===================
--- metac
+++ metacp
         declarations {
-          symbol: "local0"
+          symbol: "advanced.Test.$anon#x()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


===================
advanced.Test.s2().
===================
--- metac
+++ metacp
         declarations {
-          symbol: "local1"
+          symbol: "advanced.Test.$anon#x()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


========
classes.
========
--- metac
+++ metacp
 kind: PACKAGE
 properties: 0
 name: "classes"
-accessibility {
-  tag: PUBLIC
-  symbol: ""
-}
 language: SCALA


============================
classes.C3#copy$default$1().
============================
--- metac
+++ metacp
             symbol: "scala.Int#"
-        annotations {
-          tpe {
-            tag: TYPE_REF
-            typeRef {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


============================
classes.C4#copy$default$1().
============================
--- metac
+++ metacp
             symbol: "scala.Int#"
-        annotations {
-          tpe {
-            tag: TYPE_REF
-            typeRef {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


============================
classes.C6#copy$default$1().
============================
--- metac
+++ metacp
             symbol: "scala.Int#"
-        annotations {
-          tpe {
-            tag: TYPE_REF
-            typeRef {
-              symbol: "scala.annotation.unchecked.uncheckedVariance#"


======================
classes.N.anonClass().
======================
--- metac
+++ metacp
         declarations {
-          symbol: "local1"
+          symbol: "classes.N.anonClass().$anon#local()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


========
example.
========
--- metac
+++ metacp
 kind: PACKAGE
 properties: 0
 name: "example"
-accessibility {
-  tag: PUBLIC
-  symbol: ""
-}
 language: SCALA


============
example.Acc#
============
--- metac
+++ metacp
       language: UNKNOWN_LANGUAGE
     declarations {
-      symbol: "example.Acc#m3()."
+      symbol: "example.Acc#m4()."
       kind: UNKNOWN_KIND
       properties: 0
       name: ""
       language: UNKNOWN_LANGUAGE
     declarations {
-      symbol: "example.Acc#m4()."
+      symbol: "example.Acc#m5()."
       kind: UNKNOWN_KIND
       properties: 0
       name: ""
       language: UNKNOWN_LANGUAGE
     declarations {
-      symbol: "example.Acc#m5()."
+      symbol: "example.Acc#m6()."
       kind: UNKNOWN_KIND
       properties: 0
       name: ""
       language: UNKNOWN_LANGUAGE
     declarations {
-      symbol: "example.Acc#m6()."
+      symbol: "example.Acc#m7()."
       kind: UNKNOWN_KIND
       properties: 0
       name: ""
       language: UNKNOWN_LANGUAGE
     declarations {
-      symbol: "example.Acc#m7()."
+      symbol: "example.Acc#m3()."
       kind: UNKNOWN_KIND
       properties: 0
       name: ""


==============================
example.MetacJava#nonStatic().
==============================
--- metac
+++ metacp
             string: ""
-        symbol: "com.javacp.MetacJava#StaticInner#NonStatic#"
+        symbol: "com.javacp.MetacJava.StaticInner#NonStatic#"


================================
example.MetacJava#staticInner().
================================
--- metac
+++ metacp
     return_type {
       tag: TYPE_REF
       typeRef {
-        symbol: "com.javacp.MetacJava#StaticInner#"
+        symbol: "com.javacp.MetacJava.StaticInner#"


==========================
example.Methods#m12b().(x)
==========================
--- metac
+++ metacp
     declarations {
-      symbol: "local0"
+      symbol: "example.Methods#$anon#x()."
       kind: UNKNOWN_KIND
       properties: 0
       name: ""


=========================
example.Methods#m13().(x)
=========================
--- metac
+++ metacp
 properties: 0
 name: "x"
 tpe {
-  tag: ANNOTATED_TYPE
-  annotatedType {
-    tpe {
-      tag: TYPE_REF
-      typeRef {
-        symbol: "scala.Int#"
-    annotations {
-      tpe {
-        tag: TYPE_REF
-        typeRef {
-          symbol: "scala.unchecked#"
+  tag: TYPE_REF
+  typeRef {
+    symbol: "scala.Int#"
 accessibility {


=========================
example.Methods#m14().(x)
=========================
--- metac
+++ metacp
     tpe {
       tag: TYPE_REF
       typeRef {
-        symbol: "local1"
+        symbol: "example.Methods#m14().(x)T#"
     declarations {
-      symbol: "local1"
+      symbol: "example.Methods#m14().(x)T#"
       kind: UNKNOWN_KIND
       properties: 0
       name: ""


======
flags.
======
--- metac
+++ metacp
 kind: PACKAGE
 properties: 0
 name: "flags"
-accessibility {
-  tag: PUBLIC
-  symbol: ""
-}
 language: SCALA


================
flags.p.package.
================
--- metac
+++ metacp
       language: UNKNOWN_LANGUAGE
     declarations {
+      symbol: "flags.p.package.S#"
+      kind: UNKNOWN_KIND
+      properties: 0
+      name: ""
+      language: UNKNOWN_LANGUAGE
+    declarations {
       symbol: "flags.p.package.U#"
       kind: UNKNOWN_KIND
       properties: 0
       language: UNKNOWN_LANGUAGE
     declarations {
-      symbol: "flags.p.package.S#"
-      kind: UNKNOWN_KIND
-      properties: 0
-      name: ""
-      language: UNKNOWN_LANGUAGE
-    declarations {
       symbol: "flags.p.package.xs1()."
       kind: UNKNOWN_KIND
       properties: 0


=====================
flags.p.package.S#[T]
=====================
--- metac
+++ metacp
-annotations {
-  tpe {
-    tag: TYPE_REF
-    typeRef {
-      symbol: "scala.specialized#"
-}
 accessibility {
   tag: PUBLIC
   symbol: ""


========
objects.
========
--- metac
+++ metacp
 kind: PACKAGE
 properties: 0
 name: "objects"
-accessibility {
-  tag: PUBLIC
-  symbol: ""
-}
 language: SCALA


=======
traits.
=======
--- metac
+++ metacp
 kind: PACKAGE
 properties: 0
 name: "traits"
-accessibility {
-  tag: PUBLIC
-  symbol: ""
-}
 language: SCALA


======
types.
======
--- metac
+++ metacp
 kind: PACKAGE
 properties: 0
 name: "types"
-accessibility {
-  tag: PUBLIC
-  symbol: ""
-}
 language: SCALA


========================
types.Test.C#annType1().
========================
--- metac
+++ metacp
             symbol: "types.T#"
-        annotations {
-          tpe {
-            tag: TYPE_REF
-            typeRef {
-              symbol: "types.ann#"
-              type_arguments {
-                tag: TYPE_REF
-                typeRef {
-                  symbol: "scala.Int#"


========================
types.Test.C#annType2().
========================
--- metac
+++ metacp
             symbol: "types.T#"
-        annotations {
-          tpe {
-            tag: TYPE_REF
-            typeRef {
-              symbol: "types.ann1#"
-        annotations {
-          tpe {
-            tag: TYPE_REF
-            typeRef {
-              symbol: "types.ann2#"


=============================
types.Test.C#compoundType1().
=============================
--- metac
+++ metacp
         declarations {
-          symbol: "local0"
+          symbol: "types.Test.C#$anon#k()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


=============================
types.Test.C#compoundType3().
=============================
--- metac
+++ metacp
         declarations {
-          symbol: "local1"
+          symbol: "types.Test.C#$anon#k()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


=============================
types.Test.C#compoundType4().
=============================
--- metac
+++ metacp
         declarations {
-          symbol: "local3"
+          symbol: "types.Test.C#compoundType4().$anon#k()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


=============================
types.Test.C#compoundType6().
=============================
--- metac
+++ metacp
         declarations {
-          symbol: "local5"
+          symbol: "types.Test.C#compoundType6().$anon#k()."
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


================================
types.Test.C#existentialType1().
================================
--- metac
+++ metacp
         tpe {
           tag: TYPE_REF
           typeRef {
-            symbol: "local7"
+            symbol: "types.Test.C#existentialType1().T#"
         declarations {
-          symbol: "local7"
+          symbol: "types.Test.C#existentialType1().T#"
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


================================
types.Test.C#existentialType2().
================================
--- metac
+++ metacp
             type_arguments {
               tag: TYPE_REF
               typeRef {
-                symbol: "local8"
+                symbol: "types.Test.C#existentialType2()._$1#"
         declarations {
-          symbol: "local8"
+          symbol: "types.Test.C#existentialType2()._$1#"
           kind: UNKNOWN_KIND
           properties: 0
           name: ""


===========================
types.Test.C#singleType2().
===========================
--- metac
+++ metacp
             string: ""
-        symbol: "types.P#x()."
+        symbol: "types.P#x."
         primitive: 0
         string: ""


==============================
types.Test.Literal.javaEnum().
==============================
--- metac
+++ metacp
 kind: METHOD
 properties: 1032
 name: "javaEnum"
-tpe {
-  tag: METHOD_TYPE
-  methodType {
-    return_type {
-      tag: SINGLETON_TYPE
-      singletonType {
-        tag: SYMBOL
-        symbol: "java.nio.file.LinkOption#NOFOLLOW_LINKS."
-        primitive: 0
-        string: ""
-}
 accessibility {
   tag: PUBLIC
   symbol: ""


